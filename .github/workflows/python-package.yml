# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    # Publish semver tags as releases.
    tags: [ '**' ]

jobs:
  Linux-build-amd64:
    name: Build Linux Amd64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Pyinstaller
        run: |
          pyinstaller --onefile --add-data "conf.yaml.default:." --add-data "templates:templates" --name vpspeek app.py

      - name: Upload Linux File
        uses: actions/upload-artifact@v3
        with:
          path: dist/vpspeek

  Create-release:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ Linux-build-amd64 ]
    steps:

      # Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload Release Asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/vpspeek
          asset_name: vpspeek
          asset_content_type: application/octet-stream